{"version":3,"sources":["webpack:///./src/app/board-playing/board-playing.module.ts","webpack:///./src/app/board-playing/board-playing.page.html","webpack:///./src/app/board-playing/board-playing.page.scss","webpack:///./src/app/board-playing/board-playing.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEW;AAExD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oEAAgB;KAC5B;CACF,CAAC;AAWF;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QATlC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,oEAAgB,CAAC;SACjC,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBnC,2VAA2V,kBAAkB,uMAAuM,WAAW,kGAAkG,0EAA0E,KAAK,yU;;;;;;;;;;;ACAhvB,2BAA2B,gCAAgC,gBAAgB,EAAE,qBAAqB,wBAAwB,EAAE,+CAA+C,2f;;;;;;;;;;;;;;;;;;ACAzH;AACK;AAOvD;IAUE,0BAAoB,MAAmB;QAAnB,WAAM,GAAN,MAAM,CAAa;QATvC,aAAQ,GAAQ,EAAE,CAAC;QAEnB,QAAG,GAAW,CAAC,CAAC;QAChB,WAAM,GAAY,KAAK,CAAC;QACxB,cAAS,GAAQ;YACf,OAAO,EAAE,CAAC;YACV,MAAM,EAAE,EAAE;SACX;IAE0C,CAAC;IAE5C,mCAAQ,GAAR;QACE,qFAAqF;QACrF,qBAAqB;QACrB,0BAA0B;QAC1B,0BAA0B;QAC1B,aAAa;QACb,gCAAgC;QAChC,MAAM;QACN,MAAM;QACN,IAAI,CAAC,MAAM,GAAG;YACZ,EAAE,EAAE,CAAC;YACL,SAAS,EAAE,IAAI;YACf,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,GAAG;SACV,CAAC;QACF,IAAI,CAAC,QAAQ,GAAG;YACd;gBACE,EAAE,EAAE,CAAC;gBACL,SAAS,EAAE,KAAK;gBAChB,MAAM,EAAE,KAAK;gBACb,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,GAAG;aACV;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,SAAS,EAAE,KAAK;gBAChB,MAAM,EAAE,KAAK;gBACb,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,GAAG;aACV;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,SAAS,EAAE,KAAK;gBAChB,MAAM,EAAE,KAAK;gBACb,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,GAAG;aACV;SACF;QACD,gEAAgE;IAClE,CAAC;IAED,qCAAU,GAAV;QACE,IAAI,CAAC,GAAG,EAAE,CAAC;IACb,CAAC;IACD,kCAAO,GAAP,UAAQ,CAAS;QACf,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IA3DU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,iHAAwC;;SAEzC,CAAC;+EAW4B,kEAAW;OAV5B,gBAAgB,CA4D5B;IAAD,uBAAC;CAAA;AA5D4B","file":"board-playing-board-playing-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BoardPlayingPage } from './board-playing.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BoardPlayingPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [BoardPlayingPage]\n})\nexport class BoardPlayingPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-title>Board Playing</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <div text-center>\\n    <ion-chip color=\\\"primary\\\">\\n      <ion-avatar>\\n        <img src=\\\"../../assets/default_avatar.png\\\">\\n      </ion-avatar>\\n      <ion-label>Leader: {{this.leader.name}}</ion-label>\\n    </ion-chip>\\n  </div>\\n  <ion-grid>\\n    <ion-row text-center>\\n      <ion-col>\\n        <b>STT</b>\\n      </ion-col>\\n      <ion-col *ngFor=\\\"let user of listUser\\\">\\n        <b>{{user.name}}</b>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row text-center *ngFor=\\\"let in of counter(stt) ;let i = index\\\">\\n      <ion-col class=\\\"stt-col\\\">\\n        <ion-label>{{i+1}}</ion-label>\\n      </ion-col>\\n      <ion-col *ngFor=\\\"let user of listUser\\\">\\n        <ion-input> </ion-input>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <ion-icon name=\\\"add-circle-outline\\\" (click)=\\\"addNewGame()\\\"></ion-icon>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\"","module.exports = \"ion-col {\\n  border: 0.1px solid #dad7d7;\\n  margin: 2px; }\\n  ion-col.stt-col {\\n    padding-top: 1rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Wb2x1bWVzL0RhdGEvbXlDb2RlL2NvdW50UG9pbnRHYW1lL3NyYy9hcHAvYm9hcmQtcGxheWluZy9ib2FyZC1wbGF5aW5nLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDJCQUEyQjtFQUMzQixXQUFXLEVBQUE7RUFGYjtJQUlJLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYm9hcmQtcGxheWluZy9ib2FyZC1wbGF5aW5nLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb2wge1xuICBib3JkZXI6IDAuMXB4IHNvbGlkICNkYWQ3ZDc7XG4gIG1hcmdpbjogMnB4O1xuICAmLnN0dC1jb2wge1xuICAgIHBhZGRpbmctdG9wOiAxcmVtO1xuICB9XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { GameService } from '../services/game.service';\n\n@Component({\n  selector: 'app-board-playing',\n  templateUrl: './board-playing.page.html',\n  styleUrls: ['./board-playing.page.scss'],\n})\nexport class BoardPlayingPage implements OnInit {\n  listUser: any = [];\n  leader: any;\n  stt: number = 1;\n  adding: boolean = false;\n  boardGame: any = {\n    sttGame: 1,\n    winner: ''\n  }\n  stringHTML: '';\n  constructor(private gamesv: GameService) { }\n\n  ngOnInit() {\n    // let temp = this.gamesv.infoGameComing ? this.gamesv.infoGameComing.listGamer : [];\n    // temp.map(data => {\n    //   if (data.isChecked) {\n    //     this.leader = data;\n    //   } else {\n    //     this.listUser.push(data);\n    //   }\n    // });\n    this.leader = {\n      id: 1,\n      isChecked: true,\n      isHost: false,\n      money: 10000,\n      name: 'A'\n    };\n    this.listUser = [\n      {\n        id: 2,\n        isChecked: false,\n        isHost: false,\n        money: 10000,\n        name: 'B'\n      },\n      {\n        id: 3,\n        isChecked: false,\n        isHost: false,\n        money: 10000,\n        name: 'C'\n      },\n      {\n        id: 4,\n        isChecked: false,\n        isHost: false,\n        money: 10000,\n        name: 'D'\n      },\n    ]\n    //console.log('list user on board', this.listUser, this.leader);\n  }\n  \n  addNewGame() {\n    this.stt++;\n  }\n  counter(i: number) {\n    return new Array(i);\n  }\n}\n"],"sourceRoot":""}